"use strict";(self.webpackChunk_synthql_docs=self.webpackChunk_synthql_docs||[]).push([[968],{2261:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>c,default:()=>l,frontMatter:()=>s,metadata:()=>a,toc:()=>i});var o=n(2322),r=n(5392);const s={},c="Custom Query Executors",a={id:"custom-query-executors",title:"Custom Query Executors",description:"Although SynthQL provides great support for fetching data from your database, not all data comes from databases. Custom query executors let you execute parts of a query tree using a custom executor function.",source:"@site/docs/800-custom-query-executors.md",sourceDirName:".",slug:"/custom-query-executors",permalink:"/SynthQL/docs/custom-query-executors",draft:!1,unlisted:!1,editUrl:"https://github.com/synthql/SynthQL/tree/master/packages/docs/docs/800-custom-query-executors.md",tags:[],version:"current",sidebarPosition:800,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Generating types",permalink:"/SynthQL/docs/generating-types"},next:{title:"Architecture",permalink:"/SynthQL/docs/architecture"}},u={},i=[{value:"How can I configure a custom executor",id:"how-can-i-configure-a-custom-executor",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"custom-query-executors",children:"Custom Query Executors"}),"\n",(0,o.jsx)(t.p,{children:"Although SynthQL provides great support for fetching data from your database, not all data comes from databases. Custom query executors let you execute parts of a query tree using a custom executor function."}),"\n",(0,o.jsx)(t.p,{children:"This can be used to fetch data from a source other than your database, such as a REST endpoint, a file or any other data source you can imagine."}),"\n",(0,o.jsx)(t.h2,{id:"how-can-i-configure-a-custom-executor",children:"How can I configure a custom executor"}),"\n",(0,o.jsxs)(t.p,{children:["When constructing a ",(0,o.jsx)(t.code,{children:"QueryEngine"})," you may pass a list of ",(0,o.jsx)(t.code,{children:"executors"}),". In this example we're configuring a custom executor for the ",(0,o.jsx)(t.code,{children:"rotten_tomatoes_rating"})," table."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ts",children:"import { QueryProvider } from \"@synthql/backend\";\n\ninterface DB {\n    film: {...}\n    rotten_tomatoes_rating: {...}\n}\n\nconst rottenTomatoesRatingProvider: QueryProvider<DB,'rotten_tomatoes_rating'> = {\n    table: 'rotten_tomatoes_rating'.\n    execute: ({title}) => {\n        return fetchRottenTomatoesRatingByTitle(title)\n    }\n}\n\nnew QueryEngine({\n    executors: [rottenTomatoesRatingProvider]\n})\n"})}),"\n",(0,o.jsx)(t.p,{children:"This lets you build queries like:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ts",children:"export function findFilm(id: number) {\n    const rating = from('rotten_tomatoes_rating')\n        .columns('title', 'rating')\n        .where({ title: col('film.title') })\n        .maybe();\n\n    return from('film').columns('id', 'title').include({ rating }).many();\n}\n"})}),"\n",(0,o.jsxs)(t.p,{children:["The query engine will send the ",(0,o.jsx)(t.code,{children:"film"})," query to the database, and the ",(0,o.jsx)(t.code,{children:"rotten_tomatoes_rating"})," query to the query executor."]})]})}function l(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},5392:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>c});var o=n(2784);const r={},s=o.createContext(r);function c(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);