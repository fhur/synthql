"use strict";(self.webpackChunk_synthql_docs=self.webpackChunk_synthql_docs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Getting started","href":"/SynthQL/docs/getting-started","docId":"getting-started","unlisted":false},{"type":"link","label":"Security","href":"/SynthQL/docs/security","docId":"security","unlisted":false},{"type":"link","label":"Query language","href":"/SynthQL/docs/query-language","docId":"query-language","unlisted":false},{"type":"link","label":"Examples","href":"/SynthQL/docs/examples","docId":"examples","unlisted":false},{"type":"link","label":"Query composition & reuse","href":"/SynthQL/docs/query-composition","docId":"query-composition","unlisted":false},{"type":"link","label":"Complex queries","href":"/SynthQL/docs/complex-queries","docId":"complex-queries","unlisted":false},{"type":"link","label":"Lazy queries","href":"/SynthQL/docs/lazy-queries","docId":"lazy-queries","unlisted":false},{"type":"link","label":"Schema changes","href":"/SynthQL/docs/handling-schema-changes","docId":"handling-schema-changes","unlisted":false},{"type":"link","label":"Generating types","href":"/SynthQL/docs/generating-types","docId":"generating-types","unlisted":false},{"type":"link","label":"Custom Query Executors","href":"/SynthQL/docs/custom-query-executors","docId":"custom-query-executors","unlisted":false},{"type":"link","label":"Architecture","href":"/SynthQL/docs/architecture","docId":"architecture","unlisted":false}]},"docs":{"architecture":{"id":"architecture","title":"Architecture","description":"This is a brief, high level guide that documents SynthQL\'s architecture.","sidebar":"tutorialSidebar"},"complex-queries":{"id":"complex-queries","title":"Complex queries","description":"Having","sidebar":"tutorialSidebar"},"custom-query-executors":{"id":"custom-query-executors","title":"Custom Query Executors","description":"Although SynthQL provides great support for fetching data from your database, not all data comes from databases. Custom query executors let you execute parts of a query tree using a custom executor function.","sidebar":"tutorialSidebar"},"examples":{"id":"examples","title":"Examples","description":"Find all users with ids in the list","sidebar":"tutorialSidebar"},"generating-types":{"id":"generating-types","title":"Generating types","description":"To generate a schema, create an instance of the QueryEngine and call the generateSchema function.","sidebar":"tutorialSidebar"},"getting-started":{"id":"getting-started","title":"Getting started","description":"Install the NPM package","sidebar":"tutorialSidebar"},"handling-schema-changes":{"id":"handling-schema-changes","title":"Schema changes","description":"jsonb / json columns","sidebar":"tutorialSidebar"},"lazy-queries":{"id":"lazy-queries","title":"Lazy queries","description":"The bigger the query, the longer the latency","sidebar":"tutorialSidebar"},"query-composition":{"id":"query-composition","title":"Query composition & reuse","description":"In my opinion one of the bigger issues with SQL is the fact that you cannot compose larger queries from simpler queries.","sidebar":"tutorialSidebar"},"query-language":{"id":"query-language","title":"Query language","description":"SynthQL comes with a very basic query language. Let\'s see a few examples:","sidebar":"tutorialSidebar"},"security":{"id":"security","title":"Security","description":"Letting clients make arbitrary queries, even if read-only comes with a set of security challenges. SynthQL comes with built in mechanisms to implement robust authorization logic so you can limit what queries clients can make.","sidebar":"tutorialSidebar"}}}')}}]);