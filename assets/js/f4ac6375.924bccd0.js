"use strict";(self.webpackChunk_synthql_docs=self.webpackChunk_synthql_docs||[]).push([[854],{4406:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>c,toc:()=>d});var s=n(2322),r=n(5392);const a={},i="Getting started",c={id:"getting-started",title:"Getting started",description:"Install the NPM package",source:"@site/docs/100-getting-started.md",sourceDirName:".",slug:"/getting-started",permalink:"/SynthQL/docs/getting-started",draft:!1,unlisted:!1,editUrl:"https://github.com/synthql/SynthQL/tree/master/packages/docs/docs/100-getting-started.md",tags:[],version:"current",sidebarPosition:100,frontMatter:{},sidebar:"tutorialSidebar",next:{title:"Security",permalink:"/SynthQL/docs/security"}},l={},d=[{value:"Install the NPM package",id:"install-the-npm-package",level:2},{value:"Generate types",id:"generate-types",level:2},{value:"Write your first query",id:"write-your-first-query",level:2},{value:"Setup the query engine",id:"setup-the-query-engine",level:2}];function o(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"getting-started",children:"Getting started"}),"\n",(0,s.jsx)(t.h2,{id:"install-the-npm-package",children:"Install the NPM package"}),"\n",(0,s.jsx)(t.p,{children:"Start by installing the SynthQL packages."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"# Backend packages\nyarn add @synthql/backend @synthql/queries\n\n# Frontend packages\nyarn add @synthql/react @synthql/queries\n"})}),"\n",(0,s.jsx)(t.h2,{id:"generate-types",children:"Generate types"}),"\n",(0,s.jsxs)(t.p,{children:["Then generate the types from your database using the ",(0,s.jsx)(t.code,{children:"@synthql/cli"}),"."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"npx @synthql/cli generate \\\n    # The database connection string\n    --url=postgres://postgres:postgres@localhost:5432/postgres \\\n    # The folder where SynthQL will write the generated types\n    --out=./src/generated\n"})}),"\n",(0,s.jsxs)(t.p,{children:["This will generate a file at ",(0,s.jsx)(t.code,{children:"src/generated/synthql/db.ts"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"write-your-first-query",children:"Write your first query"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"import { from } from 'src/db';\n\nconst findUserByIds = (ids: string[]) => {\n    return (\n        from('users')\n            // select which columns you want\n            .columns('id', 'email')\n            // filter by IDs\n            .filter({ id: { in: ids } })\n            // return the first 100 that match\n            .take(100)\n    );\n};\n"})}),"\n",(0,s.jsx)(t.h2,{id:"setup-the-query-engine",children:"Setup the query engine"}),"\n",(0,s.jsx)(t.p,{children:"The QueryEngine compiles SynthQL queries into SQL and sends them to the database."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"const queryEngine = new QueryEngine({\n    url: process.env.DATABASE_URL,\n});\n\n// execute the users query\nqueryEngine.execute(users);\n"})})]})}function h(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},5392:(e,t,n)=>{n.d(t,{Z:()=>c,a:()=>i});var s=n(2784);const r={},a=s.createContext(r);function i(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);